syntax = "proto3";

package contract;

import "core/db/timestamp.proto";
import "core/db/arangodb/filter.proto";

option go_package = "github.com/tmds-io/masterdata/contract/data_definition;data_definition";

// DataDefinition contains a collection of DataValues.
service DataDefinitionHandler {
  rpc Create (CreateDataDefinitionRequest) returns (CreateDataDefinitionResponse) {}

  rpc Read (ReadDataDefinitionRequest) returns (ReadDataDefinitionResponse) {}

  rpc Update (UpdateDataDefinitionRequest) returns (UpdateDataDefinitionResponse) {}

  rpc Delete (DeleteDataDefinitionRequest) returns (DeleteDataDefinitionResponse) {}

  rpc Search (SearchDataDefinitionRequest) returns (SearchDataDefinitionResponse) {}
}

enum DataType {
  RAW = 0;
  PROCESSED = 1;
}

message DataDefinition {
  string id = 1; // Unique identifier for the DataDefinition
  string key = 2; // Unique Key code (used as id in db)
  string name = 3; // Name of the data definition
  repeated string category_value_ids = 4; // Category of the data definition
  DataType default_type = 5; // Type of the data definition by default
  repeated string default_segment_ids = 6; // Association SegmentId / Value
  string default_measurement_unit_id = 7; // Unit of the data definition by default
  string visibility = 8; // Should the data definition be visible
  bool is_default_overloadable = 9;
  string description = 10;
  db.Timestamp updated_at = 101; // Date of the last update
}

// Request to read a DataDefinition by ID.
message ReadDataDefinitionRequest {
  string id = 1; // ID of the DataDefinition to read
}

// Response containing a DataDefinition.
message ReadDataDefinitionResponse {
  DataDefinition data_definition = 1; // The retrieved DataDefinition
}

// Request to save a DataDefinition.
message CreateDataDefinitionRequest {
  DataDefinition data_definition = 1; // The DataDefinition to save
}

// Response indicating the status of the save operation.
message CreateDataDefinitionResponse {
  string id = 1; // ID of the DataDefinition created
}

// Request to save a DataDefinition.
message UpdateDataDefinitionRequest {
  DataDefinition data_definition = 1; // The DataDefinition to save
}

// Response indicating the status of the save operation.
message UpdateDataDefinitionResponse {
  string id = 1; // ID of the DataDefinition Updated
}

// Request to delete a DataDefinition by ID.
message DeleteDataDefinitionRequest {
  string id = 1; // ID of the DataDefinition to delete
}

// Response indicating the status of the delete operation.
message DeleteDataDefinitionResponse {
  string id = 1; // ID of the DataDefinition deleted
}

// Request to search for DataDefinitions based on criteria.
message SearchDataDefinitionRequest {
  arangodb.Filters filters = 1;
}

// Response containing a list of matching DataDefinitions.
message SearchDataDefinitionResponse {
  repeated DataDefinition data_definitions = 1; // List of matching DataDefinitions
  arangodb.PaginationData pagination = 2;
}
